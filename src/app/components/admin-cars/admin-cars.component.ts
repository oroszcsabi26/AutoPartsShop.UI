import { Component, OnInit } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HttpClient } from '@angular/common/http';
import { FormsModule } from '@angular/forms';

@Component({
  selector: 'app-admin-cars',
  standalone: true,
  imports: [CommonModule, FormsModule],
  templateUrl: './admin-cars.component.html',
  styleUrls: ['./admin-cars.component.css']
})
export class AdminCarsComponent implements OnInit {
  cars: any[] = []; // Aut칩m치rk치k list치ja
  newCarName: string = ''; // 칔j aut칩m치rka neve
  editCarId: number | null = null;
  editCarName: string = '';
  errorMessage: string = ''; // Hiba칲zenetek t치rol치s치ra

  constructor(private http: HttpClient) {}

  ngOnInit(): void {
    this.loadCars();
  }

  // 游댳 Aut칩m치rk치k bet칬lt칠se az adatb치zisb칩l
  loadCars(): void {
    this.http.get<any[]>('http://localhost:5214/api/cars').subscribe({
      next: (data) => this.cars = data,
      error: (err) => {
        console.error('Hiba az aut칩m치rk치k lek칠r칠sekor:', err);
        this.errorMessage = 'Nem siker칲lt bet칬lteni az aut칩m치rk치kat!';
      }
    });
  }

  // 游댳 칔j aut칩m치rka hozz치ad치sa
  addCar(): void {
    this.errorMessage = '';
    if (!this.newCarName.trim()) {
      this.errorMessage = 'Az aut칩m치rka neve nem lehet 칲res!';
      return;
    }

    this.http.post('http://localhost:5214/api/cars', { name: this.newCarName }).subscribe({
      next: () => {
        this.newCarName = '';
        this.loadCars();
      },
      error: (err) => {
        console.error('Hiba az aut칩m치rka hozz치ad치sakor:', err);
        this.errorMessage = 'Hiba t칬rt칠nt az 칰j aut칩m치rka hozz치ad치sakor!';
      }
    });
  }

  // 游댳 Aut칩m치rka szerkeszt칠se
  startEdit(car: any): void {
    this.editCarId = car.id;
    this.editCarName = car.name;
  }

  saveEdit(): void {
    this.errorMessage = '';
    if (this.editCarId === null || !this.editCarName.trim()) return;

    this.http.put(`http://localhost:5214/api/cars/${this.editCarId}`, { name: this.editCarName }).subscribe({
      next: () => {
        this.editCarId = null;
        this.editCarName = '';
        this.loadCars();
      },
      error: (err) => {
        console.error('Hiba az aut칩m치rka m칩dos칤t치sakor:', err);
        this.errorMessage = 'Hiba t칬rt칠nt az aut칩m치rka m칩dos칤t치sakor!';
      }
    });
  }

  // 游댳 Aut칩m치rka t칬rl칠se
  deleteCar(carId: number): void {
    this.errorMessage = '';
    if (!confirm('Biztosan t칬r칬lni szeretn칠d ezt az aut칩m치rk치t?')) return;

    this.http.delete(`http://localhost:5214/api/cars/${carId}`).subscribe({
      next: () => this.loadCars(),
      error: (err) => {
        console.error('Hiba az aut칩m치rka t칬rl칠sekor:', err);
        if (err.status === 400) {
          this.errorMessage = 'Az aut칩m치rka nem t칬r칬lhet콈, mert m칠g l칠teznek hozz치 tartoz칩 aut칩modellek!';
        } else {
          this.errorMessage = 'Hiba t칬rt칠nt az aut칩m치rka t칬rl칠sekor!';
        }
      }
    });
  }
}
